version: "3.9"
volumes: 
  imagesdata:
  grafanadata:
  postgresdata:
  mongodata:
  tempodata:
services:
  backend:
    image: node:lts
    volumes:
      - ./backend:/home/backend
      - imagesdata:/images
    working_dir: /home/backend
    ports:  
      - 3000:3000
      - 9229:9229
    entrypoint: ["/bin/sh"]
    command: ["prod.sh"]
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
        loki-pipeline-stages: |
          - json:
              expressions:
                output: msg
                level: level
                timestamp: time
                pid: pid
                hostname: hostname
                context: context
                traceID: traceID
  db:
    image: postgres
    restart: always
    expose: 
      - "5432"
    volumes:
      - postgresdata:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: images
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  mongo:
    image: mongo
    restart: always
    volumes: 
      - mongodata:/data/db
    logging:
      driver: loki
      options:
        loki-url: "http://localhost:3100/loki/api/v1/push"
    # environment:
    #   MONGO_INITDB_ROOT_USERNAME: root
    #   MONGO_INITDB_ROOT_PASSWORD: example
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://localhost:12201"
    #     tag: "demo2_redis"
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    # environment:
    #   ME_CONFIG_MONGODB_ADMINUSERNAME: root
    #   ME_CONFIG_MONGODB_ADMINPASSWORD: example
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes: 
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  mongo-exporter:
    image: bitnami/mongodb-exporter
    ports:
      - 9091:9091
    command: ["--mongodb.uri=mongodb://mongo", "--web.listen-address=0.0.0.0:9091"]
  pg-exporter:
    image: bitnami/postgres-exporter
    ports:
      - 9092:9092
    environment: 
      DATA_SOURCE_NAME: sslmode=disable user=images password=password host=db
      PG_EXPORTER_WEB_LISTEN_ADDRESS: 0.0.0.0:9092
  grafana:
    image: grafana/grafana
    ports: 
      - 3001:3000
    volumes: 
      - grafanadata:/var/lib/grafana
  loki:
    image: grafana/loki:2.0.0
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
  tempo:
    image: grafana/tempo:latest
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./tempo-local.yaml:/etc/tempo.yaml
      - tempodata:/tmp/tempo
    ports:
      # - "14268"      # jaeger ingest, Jaeger - Thrift HTTP
      # - "14250"      # Jaeger - GRPC
      # - "55680"      # OpenTelemetry
      # - "3100"       # tempo
      # - "6831/udp"   # Jaeger - Thrift Compact
      - "6832/udp"   # Jaeger - Thrift Binary

  # elasticsearch:
  #   image: elasticsearch:7.12.1
  #   environment:
  #     - discovery.type=single-node
  #     - ES_JAVA_OPTS=-Xms250m -Xmx250m
  #   ports:
  #     - 9200:9200
  #     - 9300:9300
  # logstash:
  #   image: logstash:7.12.1
  #   links:
  #     - elasticsearch
  #   environment:
  #     - ES_JAVA_OPTS=-Xms250m -Xmx250m
  #   volumes:
  #     - ./logstash.conf:/etc/logstash/logstash.conf
  #   command: logstash -f /etc/logstash/logstash.conf
  #   ports:
  #     - 12201:12201/udp
  #   depends_on:
  #     - elasticsearch




